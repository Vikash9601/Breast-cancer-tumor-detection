import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import cv2 as cv
from scipy.signal import wiener
from skimage.filters import threshold_multiotsu


# The input image.
image = cv.imread("/home/boss/Documents/Dataset_BUSI_with_GT/malignant/malignant (17).png",1)
filtered_img=cv.GaussianBlur(image,(5,5),0)
filtered_img = wiener(filtered_img, mysize=5) 
nimg=np.array(filtered_img,dtype=np.uint8)

img1=cv.cvtColor(nimg,cv.COLOR_RGB2HSV)
# cimg=cv.cvtColor(img1,cv.COLOR_BGR2HSV)
h,s,v=cv.split(img1)
clahe=cv.createCLAHE(clipLimit=5)
final=clahe.apply(v)


merged_hsv=cv.merge((h,s,v))
normal_hist=cv.cvtColor(merged_hsv,cv.COLOR_HSV2BGR)

filtered_img=cv.cvtColor(normal_hist,cv.COLOR_RGB2GRAY)
# filtered_img = cv.medianBlur(image,5)
thresholds = threshold_multiotsu(filtered_img,classes=5)

segm1 = (filtered_img <= thresholds[0])
segm2 = (filtered_img > thresholds[0]) & (filtered_img <= thresholds[1])
segm3 = (filtered_img > thresholds[1]) & (filtered_img <= thresholds[2])
segm4 = (filtered_img > thresholds[2]) & (filtered_img <= thresholds[3])
segm5=(filtered_img>thresholds[3])
all_segments=np.zeros((filtered_img.shape[0],filtered_img.shape[1],3))
# all_segments[segm1] = (1,0,0)
# all_segments[segm2] = (0,1,0)
# all_segments[segm3] = (0,0,1)
# all_segments[segm4] = (1,1,0)
# all_segments[segm5]=(0,1,1)
all_segments[segm1] = (1,0,0)
all_segments[segm2] = (0,1,0)
all_segments[segm3] = (0,0,1)
all_segments[segm4] = (1,1,0)
all_segments[segm5]=(0,1,1)

from scipy import ndimage as nd

segm1_opened = nd.binary_opening(segm1, np.ones((3,3)))
segm1_closed = nd.binary_closing(segm1_opened, np.ones((3,3)))

segm2_opened = nd.binary_opening(segm2, np.ones((3,3)))
segm2_closed = nd.binary_closing(segm2_opened, np.ones((3,3)))

segm3_opened = nd.binary_opening(segm3, np.ones((3,3)))
segm3_closed = nd.binary_closing(segm3_opened, np.ones((3,3)))

segm4_opened = nd.binary_opening(segm4, np.ones((3,3)))
segm4_closed = nd.binary_closing(segm4_opened, np.ones((3,3)))

segm5_opened = nd.binary_opening(segm5, np.ones((3,3)))
segm5_closed = nd.binary_closing(segm5_opened, np.ones((3,3)))

# segm6_opened = nd.binary_opening(segm6, np.ones((3,3)))
# segm6_closed = nd.binary_closing(segm6_opened, np.ones((3,3)))
# segm7_opened = nd.binary_opening(segm7, np.ones((3,3)))
# segm7_closed = nd.binary_closing(segm7_opened, np.ones((3,3)))

all_segments_cleaned = np.zeros((filtered_img.shape[0], filtered_img.shape[1], 3)) 

all_segments_cleaned[segm1_closed] = (1,0,0)
all_segments_cleaned[segm2_closed] = (0,1,0)
all_segments_cleaned[segm3_closed] = (0,0,1)
all_segments_cleaned[segm4_closed] = (1,1,0)
all_segments_cleaned[segm5_closed] = (0,1,1)

tumor=np.zeros((filtered_img.shape[0], filtered_img.shape[1], 3))
tumor[segm1_closed]=(1,0,0)

cv.imshow("original image",image)
# cv.imshow("thresholded image",all_segments)
cv.imshow("clean thresholded image",all_segments_cleaned)
cv.imshow("tumor",tumor)
cv.waitKey(0)
cv.destroyAllWindows()



